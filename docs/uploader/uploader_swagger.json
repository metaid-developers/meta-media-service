{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Meta Media Upload Service API, provides file upload functionality",
        "title": "Meta Media Uploader API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:7282",
    "basePath": "/api/v1",
    "paths": {
        "/config": {
            "get": {
                "description": "Get upload service configuration information, including max file size and swagger base URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Get configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/controller_handler.ConfigResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/files/commit-upload": {
            "post": {
                "description": "Submit signed transaction for broadcast",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File Upload"
                ],
                "summary": "Commit upload",
                "parameters": [
                    {
                        "description": "Commit upload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller_handler.CommitUploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload successful, return transaction ID and Pin ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/controller_handler.CommitUploadResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parameter error or file not found",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    },
                    "500": {
                        "description": "Server error or broadcast failed",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    }
                }
            }
        },
        "/files/direct-upload": {
            "post": {
                "description": "Upload file and add MetaID OP_RETURN output to existing PreTxHex, then broadcast immediately. This is a one-step upload process that combines building and broadcasting. Supports UTXO merge transaction for SIGHASH_SINGLE compatibility.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File Upload"
                ],
                "summary": "Direct upload file (one-step)",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pre-transaction hex (signed, with inputs and outputs)",
                        "name": "preTxHex",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Merge transaction hex (optional, broadcasted before main transaction)",
                        "name": "mergeTxHex",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "default": "create",
                        "description": "Operation type",
                        "name": "operation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Content type",
                        "name": "contentType",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "MetaID",
                        "name": "metaId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Address (also used as change address if changeAddress is not provided)",
                        "name": "address",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Change address (optional, defaults to address)",
                        "name": "changeAddress",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Fee rate (satoshis per byte, optional)",
                        "name": "feeRate",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Total input amount in satoshis (optional, for automatic change calculation)",
                        "name": "totalInputAmount",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upload successful, return transaction ID and Pin ID",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/controller_handler.CommitUploadResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parameter error",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    }
                }
            }
        },
        "/files/pre-upload": {
            "post": {
                "description": "Upload file and generate unsigned transaction, return transaction for client signing",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File Upload"
                ],
                "summary": "Pre-upload file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File path",
                        "name": "path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "create",
                        "description": "Operation type",
                        "name": "operation",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Content type",
                        "name": "contentType",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Change address",
                        "name": "changeAddress",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "MetaID",
                        "name": "metaId",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Fee rate",
                        "name": "feeRate",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Output list json",
                        "name": "outputs",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Other output list json",
                        "name": "otherOutputs",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pre-upload successful, return transaction and file info",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/controller_handler.PreUploadResponseData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Parameter error",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/meta-media-service_controller_respond.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller_handler.CommitUploadRequest": {
            "type": "object",
            "required": [
                "fileId",
                "signedRawTx"
            ],
            "properties": {
                "fileId": {
                    "type": "string",
                    "example": "metaid_abc123"
                },
                "signedRawTx": {
                    "type": "string",
                    "example": "0100000..."
                }
            }
        },
        "controller_handler.CommitUploadResponseData": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string",
                    "example": "metaid_abc123"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "pinId": {
                    "type": "string",
                    "example": "abc123...i0"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "txId": {
                    "type": "string",
                    "example": "abc123..."
                }
            }
        },
        "controller_handler.ConfigResponse": {
            "type": "object",
            "properties": {
                "maxFileSize": {
                    "type": "integer",
                    "example": 10485760
                },
                "swaggerBaseUrl": {
                    "type": "string",
                    "example": "localhost:7282"
                }
            }
        },
        "controller_handler.PreUploadResponseData": {
            "type": "object",
            "properties": {
                "calTxFee": {
                    "type": "integer",
                    "example": 1000
                },
                "calTxSize": {
                    "type": "integer",
                    "example": 500
                },
                "fileId": {
                    "type": "string",
                    "example": "metaid_abc123"
                },
                "fileMd5": {
                    "type": "string",
                    "example": "5d41402abc4b2a76b9719d911017c592"
                },
                "filehash": {
                    "type": "string",
                    "example": "2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "pinId": {
                    "type": "string",
                    "example": "abc123...i0"
                },
                "preTxRaw": {
                    "type": "string",
                    "example": "0100000..."
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "txId": {
                    "type": "string",
                    "example": "abc123..."
                }
            }
        },
        "meta-media-service_controller_respond.Response": {
            "description": "Unified API response structure",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "processingTime": {
                    "type": "integer",
                    "example": 123
                }
            }
        }
    }
}